// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  clerkId          String             @unique
  email            String             @unique
  username         String             @unique
  fullName         String?
  imageUrl         String?
  playlists        Playlist[]
  spotifyUserId    String?
  listeningHistory ListeningHistory[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
}

model Playlist {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  user              User     @relation(fields: [userId], references: [id])
  name              String
  source            String
  destination       String
  status            String
  songCount         Int
  playlistImage     String?
  spotifyPlaylistId String?
  songs             Song[]
  createdAt         DateTime @default(now())
}

model Song {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  playlistId       String             @db.ObjectId
  playlist         Playlist           @relation(fields: [playlistId], references: [id])
  title            String
  artist           String
  album            String?
  duration         Int?
  sourceUrl        String?
  order            Int
  spotifyTrackId   String?
  albumUrl         String?
  listeningHistory ListeningHistory[]
  createdAt        DateTime           @default(now())
}

model ListeningHistory {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  songId     String   @db.ObjectId
  song       Song     @relation(fields: [songId], references: [id])
  userId     String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  listenedAt DateTime @default(now())
}